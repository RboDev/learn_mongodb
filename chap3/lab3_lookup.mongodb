db.air_alliances.findOne({name:"SkyTeam"})

db.air_routes.findOne()

db.air_routes.aggregate([
    {$match:{airplane:{$in:["747","380"]}}},
    // Or regex is better else does not count 
    // entries like "airplane": "330 380 332 333 321 787",
    // got only 44 routes here, solution get 89
    {$project:{
        airline:"$airline.name",
        airplane:1,
        src_airport:1,
        dst_airport:1
    }}
])

db.air_routes.aggregate([
    {$match:{airplane:{$in:["380","747"]}}},
    {/**
     * from: The target collection.
     * localField: The local join field.
     * foreignField: The target join field.
     * as: The name for the results.
     * pipeline: The pipeline to run on the joined collection.
     * let: Optional variables to use in the pipeline field stages.
     */
    $lookup: {
      from: 'air_alliances',
      localField: 'airline.name',   // WRONG 
      foreignField: 'airlines',
      as: 'alliance'
    }},
    {$project:{
        _id:0,
        alliance:"$alliance.name",
        airline:"$airline.name",
        airplane:1,
        src_airport:1,
        dst_airport:1
    }},
    {$group:{
        _id:"$alliance",
        count:{$sum:1}
    }},
    {$sort:{count:-1}}
])

// Solution:

db.air_routes.aggregate([
  {$match: {
      airplane: /747|380/}},
    {$project:{
        airline:"$airline.name",
        airplane:1,
        src_airport:1,
        dst_airport:1
    }}
])

db.air_routes.aggregate([
  {
    $match: {
      airplane: /74.|380/   // USE REGEX
    }
  },
  {
    $lookup:
      from: "air_alliances",
      foreignField: "airlines",
      localField: "airline.name",
      as: "alliance"
    }
  },
  {
    $unwind: "$alliance"
  },
  {
    $group: {
      _id: "$alliance.name",
      count: { $sum: 1 }
    }
  },
  {
    $sort: { count: -1 }
  }
])
